
















module ::main::RaceMenuUtil
{










    class Icon
    {
        attribute caption_key = nil;
        attribute image_path = nil;
        attribute func = nil;
        attribute caption = nil;

        method __init__(caption_key, image_path, func)
        {
            self.caption_key = caption_key;
            self.image_path = image_path;
            self.func = func;
            self.caption = nil;
        }
    }

    function createIcon(caption_key, image_path, func)
    {
        return Icon(caption_key, image_path, func);
    }











    function initialize_icon(context, translate_page, widget, icon, extra_translate_page)
    {
        if (extra_translate_page != nil)
            icon.caption = context.translate(translate_page, extra_translate_page, "caption_" + icon.caption_key);
        else
            icon.caption = context.translate(translate_page, "caption_" + icon.caption_key);

        widget.image.image_path = "image/gt5m/test/" + icon.image_path;
        widget.icon = icon;
        widget.doInitialize(context);
    }









    function initialize_listbox(context, listbox, item, icons, translate_page, extra_translate_page)
    {


        listbox.ScalarInterpolator.reverse = true;
        listbox.ScalarInterpolator.reset();

        var unit_w = item.w;
        listbox.keep_alignment = false;
        listbox.alignment = 0.5;
        listbox.interpolate_ratio = 0.2;
        listbox.ScalarInterpolator.start_value = unit_w;
        if (icons.size <= 5)
        {
            listbox.ScalarInterpolator.end_value = unit_w * icons.size;
            listbox.dec_arrow.visible = false;
            listbox.inc_arrow.visible = false;
        }
        else
        {
            listbox.ScalarInterpolator.end_value = unit_w * 5;
            listbox.dec_arrow.visible = true;
            listbox.inc_arrow.visible = true;
        }
        listbox.setItemTemplate(context, item);
        listbox.setItemCount(icons.size);
        listbox.focus_callback = listbox.onFocus;
        listbox.focus_active = true;
        for (var i = 0; i < icons.size; i++)
        {
            var icon = icons[i];
            var w = listbox.getItemWidget(i, context);
            initialize_icon(context, translate_page, w, icon, extra_translate_page);
        }
        if (icons.size > 0)
        {
            var w = listbox.getItemWidget(0, context);
            w.separator.visible = false;
        }
    }










    function initialize_sbox0(context, sbox0, item, icons, translate_page, extra_translate_page)
    {
        sbox0.ScalarInterpolator.reverse = false;
        sbox0.ScalarInterpolator.restart();

        var listbox = sbox0.SBox1.ListBox;
        initialize_listbox(context, listbox, item, icons, translate_page, extra_translate_page);

        sbox0.visible = true;
    }




    static sAppendedParent = nil;
    static sExtraTranslatePage = nil;
    static sAppendedSBox = nil;
    static sIsActivated = nil;
    static sCursorVisible = nil;









    function create(context, root, template, icons, extra_translate_page, parent)
    {



        sAppendedSBox = template.SBox0.doCopy();
        if (parent != nil)
        {
            parent.appendChild(context, sAppendedSBox);
        }
        else
        {
            root.appendChild(context, sAppendedSBox);
        }
        sAppendedParent = root;


        sExtraTranslatePage = extra_translate_page;



        var actor = sAppendedSBox.SBox1.Caption.ScalarInterpolator;



        actor.reverse = true;
        actor.restart();


        initialize_sbox0(context, sAppendedSBox, template.Item, icons, sAppendedParent, extra_translate_page);


        sIsActivated = true;


        sCursorVisible = context.cursor_visible;
    }




    function remove(context, parent)
    {
        sCursorVisible = nil;
        sIsActivated = nil;

        if (sAppendedSBox != nil)
        {
            if (nil != parent)
            {
                parent.removeChild(context, sAppendedSBox);
            }
            else
            {
                sAppendedParent.removeChild(context, sAppendedSBox);
            }
            sAppendedSBox = nil;
        }
        sExtraTranslatePage = nil;
        sAppendedParent = nil;
    }










    function onFocusListBox(context, listbox, new_index, old_index)
    {
        var w = listbox.getItemWidget(new_index, context);
        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        sbox1.Caption.label.text = w.icon.caption;
    }






    function onActivateListBox(context, listbox)
    {
        var index = listbox.focus_index;
        var w = listbox.getItemWidget(index, context);
        w.icon.func(context);
        return 2;
    }







    function activated()
    {
        return sIsActivated;
    }





    function setFocus(context, index)
    {
        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var LBox = sbox1.ListBox;


        sAppendedParent.setFocus(LBox);

        if (index != nil)
        {
            var last_idx = LBox.focus_index;
            LBox.focus_index = index;
            LBox.onFocus(context, LBox.focus_index, last_idx);
        }
    }




    function setFocusLast(context)
    {
        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var LBox = sbox1.ListBox;
        var item_cnt = LBox.getItemCount();
        setFocus(context, item_cnt - 1);
    }




    function enableFocus(context)
    {
        var LBox = sAppendedSBox.SBox1.ListBox;
        LBox.can_focus = true;
    }



    function disableFocus(context)
    {
        var LBox = sAppendedSBox.SBox1.ListBox;
        LBox.can_focus = false;
    }





    function getFocusIndex()
    {
        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var LBox = sbox1.ListBox;
        return LBox.focus_index;
    }




    function closeAction(context)
    {
        sIsActivated = false;

        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var listbox = sbox1.ListBox;


        var actor = sbox1.Caption.ScalarInterpolator;

        actor.reverse = false;
        actor.restart();

        sbox1.dec_arrow.visible = false;
        sbox1.inc_arrow.visible = false;

        sbox0.ScalarInterpolator.reverse = true;
        sbox0.ScalarInterpolator.start();
        listbox.keep_alignment = true;
        listbox.interpolate_ratio = 0.0;

        var i = listbox.focus_index;
        var item = listbox.getItemWidget(i, context);
        var a = listbox.w - item.w;
        a = a == 0 ? 0 : item.x / a;

        listbox.alignment = a;
        listbox.ScalarInterpolator.reverse = true;
        listbox.ScalarInterpolator.restart();

        item.separator.visible = false;
        item.Blink.restart();

        context.cursor_visible = false;

        context.wait(0.8);
    }




    function resetCloseAction(context)
    {
        context.cursor_visible = sCursorVisible;

        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var listbox = sbox1.ListBox;


        var item_cnt = listbox.getItemCount();
        if (item_cnt <= 5)
        {
            listbox.dec_arrow.visible = false;
            listbox.inc_arrow.visible = false;
        }
        else
        {
            listbox.dec_arrow.visible = true;
            listbox.inc_arrow.visible = true;
        }



        sbox1.Caption.ScalarInterpolator.reverse = false;
        sbox1.Caption.ScalarInterpolator.restart();


        listbox.keep_alignment = false;
        listbox.alignment = 0.5;
        listbox.interpolate_ratio = 0.2;

        listbox.ScalarInterpolator.reverse = true;
        listbox.ScalarInterpolator.reset();
    }




    function hideAction()
    {
        sIsActivated = false;
        var sbox0 = sAppendedSBox;
        sbox0.ScalarInterpolator.reverse = true;
        sbox0.ScalarInterpolator.start();
    }




    function appearAction()
    {
        sIsActivated = true;
        var sbox0 = sAppendedSBox;
        sbox0.ScalarInterpolator.reverse = false;
        sbox0.ScalarInterpolator.restart();
        sbox0.visible = true;
    }




    function setClosed()
    {
        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        sIsActivated = false;
        sbox0.y = 1080;
        sbox0.visible = false;
        sbox0.ScalarInterpolator.reverse = false;
        sbox0.ScalarInterpolator.reset();


        sbox1.Caption.ScalarInterpolator.reverse = false;
        sbox1.Caption.ScalarInterpolator.restart();
    }







    function setIconDisplay(context, index, src_icon, ignore_text)
    {
        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var listbox = sbox1.ListBox;

        var dst_icon = listbox.getItemWidget(index, context);
        dst_icon.image.image_path = src_icon.image_path;
        dst_icon.image.doInitialize(context);
        if (nil == ignore_text || !ignore_text)
        {
            var caption = "";
            if (sExtraTranslatePage != nil)
                caption = context.translate(sAppendedParent, sExtraTranslatePage,
                                            "caption_" + src_icon.caption_key);
            else
                caption = context.translate(sAppendedParent,
                                            "caption_" + src_icon.caption_key);
            sbox1.Caption.label.text = caption;
            dst_icon.icon.caption = caption;
        }
    }

    function setIcon(context, index, caption_key, image, func)
    {
        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var listbox = sbox1.ListBox;

        var dst_icon = listbox.getItemWidget(index, context);
        dst_icon.image.image_path = "image/gt5p/icon/" + image;
        dst_icon.image.doInitialize(context);
        var caption = "";
        if (sExtraTranslatePage != nil)
        {
            caption = context.translate(sAppendedParent, sExtraTranslatePage,
                                        "caption_" + caption_key);
        }
        else
        {
            caption = context.translate(sAppendedParent, "caption_" + caption_key);
        }
        sbox1.Caption.label.text = caption;
        dst_icon.icon.caption_key = caption_key;
        dst_icon.icon.caption = caption;
        dst_icon.icon.func = func;
    }

    function getIcon(context, index)
    {
        var sbox0 = sAppendedSBox;
        var sbox1 = sbox0.SBox1;
        var listbox = sbox1.ListBox;
        var item = listbox.getItemWidget(index, context);
        return item.icon;
    }





    function getTopSBox()
    {
        return sAppendedSBox;
    }
}