




module GTModeProject
{
    import main::DialogUtil;
    import main::SequenceUtil;
    import main::SoundUtil;





    static gGameStatus;


    static gSequenceCondition;


    class SequenceCondition
    {
        attribute additional_projects = Array();

        method loadProject(project_name)
        {
            var project = main::manager.loadProject("/%{main::PROJECT_ROOT_DIR}/%{project_name}/%{project_name}");
            additional_projects.push(project);
        }
        method unloadAllProjects()
        {
            foreach (var project in additional_projects)
            {
                main::manager.unloadProject(project);
            }
        }
    }





    function onLoad(update_context)
    {
        SequenceUtil::setPageTransition(
            ["*,*" : CursorProject::ColorTransition]);


        gSequenceCondition = SequenceCondition();
        gSequenceCondition.loadProject("detail");


        update_context.createRenderContext(1);

        var render_context = update_context.getRenderContext(0);


        gGameStatus = main::GlobalStatus::checkout();

        StartPageOut_XEffect(render_context, nil, TopRoot);

        SoundUtil::MenuBGMPlayGroup("menu");
    }




    function onUnload(update_context)
    {
        SoundUtil::BGMFadeout(1.0);
        gSequenceCondition.unloadAllProjects();


        if (gGameStatus != nil)
        {
            main::GlobalStatus::checkin(gGameStatus);
            gGameStatus = nil;
        }
    }






    static sNextRoot;
    static sCurrentRoot;
    static sEndSync;
    static sEffectEndFunc;


    function StartPageIn_XEffect(context, current_root, next_root, effect_end_func)
    {
        context.event_mask &= ~1;
        context.filterKeyEvent();

        sNextRoot = next_root;
        sCurrentRoot = current_root;
        sEndSync = current_root == nil || next_root == nil;
        sEffectEndFunc = effect_end_func;

        if (current_root != nil)
        {
            var a2 = ActorCollection::InEffectForCurrentPage.doCopy();
            a2.name = "ActorX";
            a2.on_effect_end = effect_end_current_root;
            current_root.appendActor(context, a2);
        }

        if (next_root != nil)
        {
            var a1 = ActorCollection::InEffectForNextPage.doCopy();
            a1.name = "ActorX";
            a1.on_effect_end = effect_end_next_root;
            next_root.appendActor(context, a1);
        }

        if (current_root != nil && next_root != nil)
        {
            context.pushPage(next_root);
        }
        else if (current_root == nil && next_root != nil)
        {
            context.startPage(next_root);
            context.pushPage(BaseRoot);
        }
    }


    function StartPageOut_XEffect(context, current_root, next_root, effect_end_func)
    {
        context.event_mask &= ~1;
        context.filterKeyEvent();

        sNextRoot = next_root;
        sCurrentRoot = current_root;
        sEndSync = current_root == nil || next_root == nil;
        sEffectEndFunc = effect_end_func;

        if (current_root != nil)
        {
            var a2 = ActorCollection::OutEffectForCurrentPage.doCopy();
            a2.name = "ActorX";
            a2.on_effect_end = effect_end_current_root;
            current_root.appendActor(context, a2);
            sEndSync = false;
        } else {
            sEndSync = true;
        }

        if (next_root != nil)
        {
            var a1 = ActorCollection::OutEffectForNextPage.doCopy();
            a1.name = "ActorX";
            a1.on_effect_end = effect_end_next_root;
            next_root.appendActor(context, a1);
            next_root.insensitive = true;
        }

        if (current_root != nil && next_root != nil)
        {
            context.pushPage(next_root);
        }
        else if (current_root == nil && next_root != nil)
        {
            context.startPage(next_root);
            context.pushPage(BaseRoot);
        }
    }


    function finalize_effect(context)
    {
        if (sEndSync)
        {
            if (sEffectEndFunc != nil)
                sEffectEndFunc(context);

            if (sCurrentRoot != nil)
            {
                context.closePage(sCurrentRoot);
                sCurrentRoot = nil;
            }
            if (sNextRoot != nil)
            {
                sNextRoot.insensitive = false;
            }
            sNextRoot = nil;
            sEndSync = false;
            sEffectEndFunc = nil;
            context.event_mask |= 1;
        } else {
            sEndSync = true;
        }
    }

    function effect_end_next_root(context)
    {
        sNextRoot.removeActor(sNextRoot["ActorX"]);
        finalize_effect(context);
    }

    function effect_end_current_root(context)
    {
        sCurrentRoot.removeActor(sCurrentRoot["ActorX"]);
        finalize_effect(context);
    }
}


module GTModeProject
{
    #include "projects/gt5m/gtmode/TopRoot.ad";
}