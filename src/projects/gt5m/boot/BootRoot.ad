

















module BootRoot
{






    method onInitialize(context)
    {

        context.pushEvent(main::menu::MScriptEvent(context, BootRoot, "on_initialize"));
    }

    method on_initialize(context)
    {






        loadSaveData(context);

        loadVoucherData(context);

        BootProjectUtil::GoNextSequence(context);
    }




    method onFinalize(context)
    {
    }




    method onCancel(context)
    {
        return EVENTRESULT_FILTER;
    }































    method loadSaveData(context)
    {
        var corrupted;
        var abort;
        var done = false;
        var buf = nil;
        var need_to_create = false;
        var bind_error = false;
        while (!done)
        {
            var data = SaveDataUtilPSP::GameDataForLoad();
            var result = SaveDataUtilPSP::load(context, data);
            if (nil != result)
            {
                [buf, need_to_create, corrupted, bind_error, abort] = result;
                if (corrupted)
                {
                    var res = DialogUtil::openConfirmDialog(context, DialogUtil::YESNO,
                                                            context.translate(BootRoot, "SaveDataPSP", "CORRUPTED_DO_YOU_RETRY_TO_LOAD"));
                    done = !res;
                }
                else if (abort)
                {
                    var res = DialogUtil::openConfirmDialog(context, DialogUtil::YESNO,
                                                            context.translate(BootRoot, "SaveDataPSP", "ABORTED_DO_YOU_RETRY_TO_LOAD"));
                    done = !res;
                }
                else if (bind_error)
                {
                    var res = DialogUtil::openConfirmDialog(context, DialogUtil::YESNO,
                                                            context.translate(BootRoot, "SaveDataPSP", "ERROR_BIND_ERROR"));
                    done = !res;
                }
                else
                {
                    done = true;
                }
            }
            else
            {
                done = true;
            }
        }
        
        if (need_to_create)
        {

            main::GlobalStatus::game_context.need_save = true;
        }

        if (nil != buf)
        {
            var result = main::GlobalStatus::setLoadedData(buf);
            if (!result)
            {
                DialogUtil::openConfirmDialog(context, DialogUtil::ERROR,
                                              context.translate(BootRoot, "SaveDataPSP", "LOADED_DATA_WAS_WRONG"));
            }
        }








        gGameStatus = main::GlobalStatus::checkout();
    }



    function loadVoucherData(context)
    {
        if (VoucherUtil.defined("loads") && VoucherUtil.defined("obtain"))
        {
            var data = VoucherUtil::loads(context);
            var result = VoucherUtil::obtain(context, BootRoot, data, gGameStatus);
        }
    }
}